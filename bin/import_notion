#!/usr/bin/env ruby

require 'bundler/setup'

require "notion"
require "notion_to_md"
require 'open-uri'
require 'date'

notion_secret = ENV['NOTION_SECRET']
database_id = ENV['NOTION_DATABASE_ID']

notion_client = Notion::Client.new(token: notion_secret)

# get the last fetched time
# check last fetched existence
if File.exist?('bin/.last_fetched')
  beginning_of_day = File.read('bin/.last_fetched').chomp
else
  datetime = DateTime.now
  beginning_of_day = datetime.to_date.to_time.to_datetime.iso8601
end

database = notion_client.database_query(
  database_id: database_id,
  filter: { 
    timestamp: 'last_edited_time',
    last_edited_time: {
      after: beginning_of_day
    }
  }
)

puts "\e[33mStart fetching pages from Notion...\e[0m"
puts "Total pages: #{database.results.size} from #{beginning_of_day}\n\n"

success = 0

database.results.each do |page|
  return if page.object != 'page'
  
  title = page.properties['Name']['title'][0]['plain_text']
  
  puts "Fetching page: #{title}"
  
  sluggable_title = title.downcase.gsub(/[^a-z0-9]+/, '-').chomp('-')
  date = page.properties['Date']['date']['start']
  collection = page.properties.dig('Collection', 'select', 'name')
  
  if collection.nil?
    puts "\e[31mCollection not found for #{title}.\e[0m"
    next
  end

  notion_converter = NotionToMd::Converter.new(page_id: page.id, token: notion_secret)
  md = notion_converter.convert(frontmatter: true)

  puts "Successfully fetched page: #{title}"
  
  raise "No content found for #{title}" if md.empty?

  # check if file exists
  filename_with_path = "_#{collection}/#{date}-#{sluggable_title}.markdown"

  File.write(filename_with_path, md)

  success += 1
rescue => e
  puts "Error: #{e}, #{e.message}"
  puts "Backtrace: #{e.backtrace}"
end

puts "\nSave the last fetched time."
File.write('bin/.last_fetched', DateTime.now.iso8601)

puts "\e[32mConverting #{success}/#{database.results.size} pages from Notion.\e[0m"