#!/usr/bin/env ruby

require 'bundler/setup'

require "notion"
require "notion_to_md"
require 'open-uri'

notion_secret = ENV['NOTION_SECRET']
database_id = ENV['NOTION_DATABASE_ID']

notion_client = Notion::Client.new(token: notion_secret)

# read the database and filter based on published status field with checkbox
database = notion_client.database_query(
  database_id: database_id,
  filter: { 'or': [{ property: "Published", checkbox: { equals: true } } ] }
)

module NotionToMd
  # class Page
  #   def frontmatter
  #     @frontmatter ||= <<~CONTENT
  #       ---
  #       #{props.to_a.map do |k, v|
  #           if k.to_s == 'title'
  #             "title: \"#{v}\""
  #           else
  #             "#{k}: #{v}"
  #           end
  #         end.join("\n")}
  #       ---
  #     CONTENT
  #   end
  # end

  module Blocks
    class Types
      class << self
        def image(block)
          type = block[:type].to_sym
          url = URI.parse(block.dig(type, :url))
          # https://example.com/filename.jpg?queryParams -> filename.jpg
          filename = "assets/images/posts/#{url.to_s.split('/')[-1].split('?')[0]}"
          
          # we can also retrieve a caption here like this:
          image_md = "![](/#{filename})"
          image_md = "![](#{url})" if url.to_s.include?('unsplash.com')
          
          IO.copy_stream(url.open, filename) if !File.exist?(filename)
          
          caption = convert_caption(block)

          image_md = "#{image_md}\n\n<em>#{caption}</em>"

          return image_md
          # or you can use jekyll_picture_tag plugin and return liquid 
          # tag "picture" here, which automatically generates responsive 
          # images for you.
        end
      end
    end
  end
end

database.results.each do |page|
  return if page.object != 'page'
  
  title = page.properties['Name']['title'][0]['plain_text']
  sluggable_title = title.downcase.gsub(/[^a-z0-9]+/, '-').chomp('-')
  date = page.properties['Date']['date']['start']
  
  notion_converter = NotionToMd::Converter.new(page_id: page.id, token: notion_secret)
  md = notion_converter.convert(frontmatter: true)
  
  # check if file exists
  filename_with_path = "_posts/#{date}-#{sluggable_title}.markdown"

  File.write(filename_with_path, md)
end

